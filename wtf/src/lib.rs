// Code was generated by pgen
use std::io::Read;
use pgen::regex::RegexSet;
const PATTERNS: &[&'static str] = &[
    "\\+",
    "\\*",
    "0",
    "1",
];
const ACTIONS: &[[i8;5]] = &[
    [-2,-2,7,8,-2,],
    [2,4,-2,-2,-1,],
    [-2,-2,7,8,-2,],
    [-2,-2,-2,-2,-2,],
    [-2,-2,7,8,-2,],
    [-2,-2,-2,-2,-2,],
    [-2,-2,-2,-2,-2,],
    [-2,-2,12,-2,-2,],
    [-2,-2,-2,13,-2,],
];
const GOTOS: &[[i8;2]] = &[
    [1,6,],
    [-1,-1,],
    [-1,3,],
    [-1,-1,],
    [-1,5,],
    [-1,-1,],
    [-1,-1,],
    [-1,-1,],
    [-1,-1,],
];
pub struct Parser<'a> {
    regex_set: RegexSet,
    position: usize,
    input: &'a str,
}
impl<'a> Parser<'a> {
    pub fn new(input: &'a str) -> Self {
let regex_set = RegexSet::new(PATTERNS.clone()).unwrap();
Parser { input: input.as_ref(), regex_set, position: 0 }
}
pub fn parse_E(&mut self) {
self.generic_parse(0)
}
    fn generic_parse(&mut self, starting_state: usize) {
    self.position = 0;
    loop {
    
}
}
}
